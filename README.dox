/**

@mainpage 15-410 Project 3

@author Prajwal Yadapadithaya (pyadapad)
@author Rohit Upadhyaya (rjupadhy)

Pebbles Kernel
--------------

The aim of this project is to implement a preemptive, multi-threaded kernel. 
We describe the design and implementation of various modules that make up the 
kernel in this README. We will describe the modules one after another with each
module explaining the various code files and the design decisions taken.

VM
--

Physical Frame Allocator
------------------------

Loader
------

Scheduler
---------

Context Switch
--------------

System calls
------------
We classify the system calls into the following categories. In each category, we describe
the implementation and design decisions taken for each system call.

Task and Thread IDs:

Life Cycle:

Thread Management:

Memory Management:

Console I/O:

Miscellaneous System Interaction:


Faults and Exceptions
---------------------


Locking Architecture
--------------------


Key Data Structures
-------------------

Generic doubly linked list:

A Simple map for threads:
The map we use for a quick lookup of thread control blocks is keyed on the 
thread id. The function used to determine the bucket into which a particular
thread falls into is simply the thread ID modulo the size of the map (2 pages
by default). Each bucket is then a linked list of thread blocks which have to
be linearly traversed to get the right thread control block. Since thread IDs
are assigned in increasing order, we have the nice effect of the map being 
uniformly loaded.


Limitations and Bugs
--------------------

*/
